{"ast":null,"code":"import _asyncToGenerator from \"/Users/raniradzewsky/Library/Mobile Documents/com~apple~CloudDocs/Documents/school/John Bryce/Tests/Test 4/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport { appConfig } from '../utils/app-config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  //Get all event types:\n  getAllEventTypes() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this.http.get(appConfig.eventTypesUrl);\n      const eventTypes = yield firstValueFrom(observable);\n      return eventTypes;\n    })();\n  }\n  //Get events by type:\n  getEventsByType(eventTypeId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this2.http.get(appConfig.eventsByTypesUrl + eventTypeId);\n      const events = yield firstValueFrom(observable);\n      return events;\n    })();\n  }\n  // Add event:\n  addEvent(event) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this3.http.post(appConfig.eventsUrl, event);\n      yield firstValueFrom(observable);\n    })();\n  }\n  // Delete event:\n  deleteEvent(eventId) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this4.http.delete(appConfig.eventsUrl + eventId);\n      yield firstValueFrom(observable);\n    })();\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,cAAc,QAAQ,MAAM;AAGrC,SAASC,SAAS,QAAQ,qBAAqB;;;AAK/C,OAAM,MAAOC,WAAW;EAEpBC,YAA2BC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAE/C;EACaC,gBAAgB;IAAA;IAAA;MACzB,MAAMC,UAAU,GAAG,KAAI,CAACF,IAAI,CAACG,GAAG,CAAmBN,SAAS,CAACO,aAAa,CAAC;MAC3E,MAAMC,UAAU,SAAST,cAAc,CAACM,UAAU,CAAC;MACnD,OAAOG,UAAU;IAAC;EACtB;EAEA;EACaC,eAAe,CAACC,WAAmB;IAAA;IAAA;MAC5C,MAAML,UAAU,GAAG,MAAI,CAACF,IAAI,CAACG,GAAG,CAAeN,SAAS,CAACW,gBAAgB,GAAGD,WAAW,CAAC;MACxF,MAAME,MAAM,SAASb,cAAc,CAACM,UAAU,CAAC;MAC/C,OAAOO,MAAM;IAAC;EAClB;EAEA;EACaC,QAAQ,CAACC,KAAiB;IAAA;IAAA;MACnC,MAAMT,UAAU,GAAG,MAAI,CAACF,IAAI,CAACY,IAAI,CAAaf,SAAS,CAACgB,SAAS,EAAEF,KAAK,CAAC;MACzE,MAAMf,cAAc,CAACM,UAAU,CAAC;IAAC;EACrC;EAEA;EACaY,WAAW,CAACC,OAAe;IAAA;IAAA;MACpC,MAAMb,UAAU,GAAG,MAAI,CAACF,IAAI,CAACgB,MAAM,CAACnB,SAAS,CAACgB,SAAS,GAAGE,OAAO,CAAC;MAClE,MAAMnB,cAAc,CAACM,UAAU,CAAC;IAAC;EACrC;;AA5BSJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFR;AAAM","names":["firstValueFrom","appConfig","DataService","constructor","http","getAllEventTypes","observable","get","eventTypesUrl","eventTypes","getEventsByType","eventTypeId","eventsByTypesUrl","events","addEvent","event","post","eventsUrl","deleteEvent","eventId","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/raniradzewsky/Library/Mobile Documents/com~apple~CloudDocs/Documents/school/John Bryce/Tests/Test 4/Frontend/src/app/services/data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { EventModel } from '../models/event-model';\nimport { EventTypeModel } from '../models/event-type-model';\nimport { appConfig } from '../utils/app-config';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n\n    public constructor(private http: HttpClient) { }\n\n    //Get all event types:\n    public async getAllEventTypes(): Promise<EventTypeModel[]> {\n        const observable = this.http.get<EventTypeModel[]>(appConfig.eventTypesUrl);\n        const eventTypes = await firstValueFrom(observable);\n        return eventTypes;\n    }\n\n    //Get events by type:\n    public async getEventsByType(eventTypeId: string): Promise<EventModel[]> {\n        const observable = this.http.get<EventModel[]>(appConfig.eventsByTypesUrl + eventTypeId);\n        const events = await firstValueFrom(observable);\n        return events;\n    }\n\n    // Add event:\n    public async addEvent(event: EventModel): Promise<void> {\n        const observable = this.http.post<EventModel>(appConfig.eventsUrl, event);\n        await firstValueFrom(observable);\n    }\n\n    // Delete event:\n    public async deleteEvent(eventId: string): Promise<void> {\n        const observable = this.http.delete(appConfig.eventsUrl + eventId);\n        await firstValueFrom(observable);\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}